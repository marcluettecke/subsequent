@import 'variables';
@import 'mixins';

#feature-overview {
  width: 100%;
	background: linear-gradient(to right, $--white, $--white 50%, $--black 50%);
  color: $--black;

	.feature-grid {
    height: 100vh;
		display: grid;
		grid-template:  repeat(4, 1fr) / 30% 1fr 1fr 30%;
		grid-template-areas:
			'heading1 heading1 heading2 heading2'
			'feature1 rotating rotating feature4'
			'feature2 rotating rotating feature5'
			'feature3 rotating rotating feature6';
		grid-gap: 15px;
		align-items: center;
		justify-items: center;
		// @include lg {
		// 	background: linear-gradient(to bottom, $--white, $--white 50%, $--black 50%);
		// 	grid-template: repeat(6, 1fr) / 60% 40%;
		// 	grid-template-areas:
		// 		'feature1 rotating'
		// 		'feature2 rotating'
		// 		'feature3 rotating'
		// 		'feature4 rotating'
		// 		'feature5 rotating'
		// 		'feature6 rotating';
		// }
		@include md {
			grid-template: repeat(4, 1fr) / repeat(2, 1fr);
			grid-template-areas:
			'heading1 heading2'
			'feature1 feature4'
			'feature2 feature5'
			'feature3 feature6';
		}

		.rotating-body {
			grid-area: rotating;

			video {
				height: 450px;

				@include md {
          display: none;
				}
			}
		}
    .feature-bullet {
      font-size: 30px;
    }

    .text-container-extraction {
      grid-area: heading1;

      h1 {
        font-size: 40px;
        font-weight: bold;
      }
    }

    .text-container-analysis {
      grid-area: heading2;

      h1 {
        font-size: 40px;
        font-weight: bold;
        color: $--white;
      }
    }

    .first-feature {
      grid-area: feature1;
    }

    .second-feature {
      grid-area: feature2;
    }

    .third-feature {
      grid-area: feature3;
    }

    .fourth-feature {
      grid-area: feature4;
    }

    .fifth-feature {
      grid-area: feature5;
    }

    .sixth-feature {
      grid-area: feature6;
    }

    .analysis-features {
      color: white;
    }
	}

}

#container-featureList {
	background: linear-gradient(to right, $--white, $--white 50%, $--black 50%);
	// position: relative;
	min-width: 30px;

	@include lg {
		// height: 2000px;
		background: linear-gradient(to bottom, $--white, $--white 50%, $--black 50%);
	}

	.details-container {
		display: grid;
		grid-gap: 30px;
		justify-items: center;
		grid-template: repeat(3, auto) / 1fr 1fr;
		grid-template-areas:
			'extraction1 analysis1'
			'extraction2 analysis2'
			'extraction3 analysis3';

		@include lg {
			grid-template: repeat(6, auto) / 1fr;

			grid-template-areas:
				'extraction1'
				'extraction2'
				'extraction3'
				'analysis1'
				'analysis2'
				'analysis3';
		}

		.first-extraction-feature {
			grid-area: extraction1;
		}
		.second-extraction-feature {
			grid-area: extraction2;
		}
		.third-extraction-feature {
			grid-area: extraction3;
		}
		.first-analysis-feature {
			grid-area: analysis1;
		}
		.first-analysis-feature {
			grid-area: analysis2;
		}
		.first-analysis-feature {
			grid-area: analysis3;
		}
		img {
			width: 350px;
			height: 250px;

			&:hover {
				transition: 0.5s;
				transform: scale(1.1);
				cursor: pointer;
			}
		}
	}
}

// mat-dialog-container#modal-component {
//   height: 1000px;
//   width: 1000px;
// }



/// sideway styling of text with line in front of original design
// .text-container-extraction {
//   overflow: hidden;
// 	height: 30px;
// 	line-height: 30px;
// 	width: 430px;
// 	left: 1%;
// 	bottom: 50%; /*0 = bottom of container, then subtract (line-height+border)*/
// 	transform: rotate(-90deg);
// 	transform-origin: top left;
// 	#extraction {
// 		text-transform: uppercase;
// 		text-align: right;
// 		font-size: 40px;
// 		color: $--black;
// 		position: relative;

// 		&:before {
// 			content: '';
// 			position: absolute;
// 			display: block;
// 			width: 120px;
// 			height: 4px;
// 			background: $--black;
// 			left: 0;
// 			top: 50%;
// 		}
// 	}
// }

// .text-container-analysis {
// 	overflow: hidden;
// 	height: 30px;
// 	line-height: 30px;
// 	width: 430px; /*matches the height of the container*/
// 	left: 98%;
// 	bottom: 250px; /*0 = bottom of container, then subtract (line-height+border)*/
// 	transform: rotate(-90deg);
// 	transform-origin: top left;
// 	#analysis {
// 		text-transform: uppercase;
// 		text-align: right;
// 		font-size: 40px;
// 		color: $--white;
// 		position: relative;

// 		&:before {
// 			content: '';
// 			position: absolute;
// 			display: block;
// 			width: 120px;
// 			height: 4px;
// 			background: $--white;
// 			left: 0;
// 			top: 50%;
// 		}
// 	}
// }
